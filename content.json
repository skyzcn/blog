{"meta":{"title":"老代码","subtitle":"代码片段","description":"PL/SQL, Java, Javascript 代码片段, 代码备忘","author":"程宣峰","url":"http://oracle.xyz"},"pages":[{"title":"个人简历","date":"2017-04-21T11:37:31.000Z","updated":"2017-04-26T02:50:31.452Z","comments":true,"path":"about/index.html","permalink":"http://oracle.xyz/about/index.html","excerpt":"","text":"联系方式 手机: 18607935958 QQ: 8570509 Email: skyz.cn@gmail.com 个人信息 姓名: 程宣峰 个人主页: www.skyz.cn 工作经验百度 (2015-03 ~ 至今)月奖季奖项目这个项目是这样分工的, 数据呈现交给FE, ADF负责中间的数据接口服务, 我负责后台数据结构和业务逻辑的实现.需求的难点在于业务部门较多, 部门的奖金计算的算法不一致, 无法用一套逻辑来套用.所以需要通过配置来决定计算的算法,和动态生成表单和Excel的导入模板来组织导入算法需要的参数.我的工作包括设计如何参数化整个计算过程和开发奖金计算的代码, 数据的权限角色的设计, BPM流程设计和与工资结算的接口等.参数化的设计能满足了未来大部分需求, 新的部门或者新需求的时候PM通过配置就能实现数据录入以及报表的展现, 而不需要RD参与. 实习生填报考勤项目这个项目我负责项目的前后端所有工作. 是我们团队对前端项目的一次尝试.前端使用了2016年最流行的react技术栈, 包括webpack, react, redux, redux-saga. 后端使用Oracle Apex发布restful服务.以往ERP的RD的工作内容包括表单的设计, 报表的开发和业务逻辑的代码的开发.我觉得我们应该掌握比较先进的前端技术来开发表单和报表.因为是第一个react项目, 所以在开发时没有可用的组件. 所有百度ERP的UI组件都需要新开发, 包括左边栏组件, 面包屑组件, 日历组件, 可编辑的table组件, 分页组件和suggest, select组件等.所以学习成本和开发成本比较高, 但是组件化的优势在于降低后期的开发和运维成本. 电讯盈科 (2012-05 ~ 2015-02)联通EHR运维项目联通EHR是一个独立的客制化的系统, 除运行工资单外的功能操作和查询都在EHR系统操作, ERP的人员相关功能已经完全只读.EHR是由Java开发, 我负责EHR的数据与ERP的数据的接口, 数据库之间的通过DB LINK沟通, 数据的同步是EHR调用ERP的API更新数据, 然后对应的物化视图日志来增量刷新EHR的表.还包括纠正两边系统不一致的数据问题, 解决EHR系统的查询性能问题, 开发组织管理系统和报表平台. 上海全进 (2010-03 ~ 2012-04)上海华力微电子ERP实施项目华力公司是一家有背景的新公司, 系统的用户以前用的SAP系统, 新公司考虑使用Oracle ERP的R12版本, 在真正决定前希望试用3个月的时间实施一小部分模块, 如果好用再决定彻底使用Oracle的系统, 称为small ERP.small ERP实施了PO, AP, FA, GL等四个财务模块.因为成本的关系只有我一名RD, 所有开发任务都由我负责, 而且我只有HRMS模块的经验, 所以对这些模块的表结构不了解, 而且项目上没有其他RD的帮忙, 又因为是新的公司没有以前写的代码可以参考, 所以只能通过阅读标准form和api来完成任务的开发.工作内容包括对标准功能的客制化, PO, AP,GL的接口开发和财务的各种报表的开发等.small ERP之后的一期项目实施了AR, OM和制造模块等, 我负责其中的财务模块的客制化开发. 汉达精密科技 (2006-09 ~ 2010-03)季度奖金和半年奖金项目这个项目受外在和内在因素影响, 外在的是在甲方所有的事情都是一个人去做, 没有细致的分工.例如除了要完成开发, 还要与HR讨论需求, 而且一个人承担了所有分公司的人事系统和考勤系统的运维.白天处理日常人事,考勤,绩效的系统问题, 培训各生产线的助理使用系统, 晚上用户下班后才能专心开发新需求.内在的是因为参加工作的第一个项目, 对开发工具的掌握和对业务领域的小白, 所以有比较多的学习成本, 做的比较辛苦, 但是个人的成长比较快, 抗压能力也得到了锻炼.系统上线后再推广到其他分公司, 人事部门对于这个系统的上线非常满意. 整合华南/华中/越南分公司的人事/考勤/卡钟/绩效系统早期分公司成立的时候, 人事和IT部门都是独立的, 所以系统也是独立的, 而且人事考勤系统并没有在ERP, 独立搭了一套form的服务器.我作为HR系统的负责人, 负责对各分公司的需求收集, 以业务需求最完整的分公司的系统为标准版本, 迁移到ERP系统.并编写迁移数据的脚本和整合所有考勤卡钟的系统. 并带领2个新成员完成所有的form的改造, 包括使用ERP的模板form进行代码迁移, 和对越南的多语言的支持.系统上线后再对月奖/季奖/半年奖金系统的整合. 也有不能整合的功能, 例如考勤月结功能, 因为不同的社保缴纳地的地方政策不一致.整合的好处是节约了硬件服务器的资源, 降低了维护的成本和难度. 技能清单 Oracle EBS开发: PL/SQL, Form/Report builder, XML publisher, WEB ADI 前端开发: Webpack + React + Redux 后端开发: JAVA SSM"}],"posts":[{"title":"工作相关的代码整理","slug":"common-sql-package","date":"2017-04-21T13:53:51.000Z","updated":"2017-04-26T12:11:52.058Z","comments":true,"path":"posts/common-sql-package.html","link":"","permalink":"http://oracle.xyz/posts/common-sql-package.html","excerpt":"","text":"工具发送邮件 cux_fnd_sendmail_pkg多个附件1234567891011121314151617181920212223242526DECLARE l_attachment_table cux_fnd_sendmail_pkg.t_attach_blob_table; ...BEGIN ... --添加到附件表 l_attachment_table(1).t_name := l_attach_file_name; l_attachment_table(1).t_ddl := g_zipped_blob; l_attachment_table(1).t_ext := &apos;zip&apos;; l_attachment_table(1).t_content_type := &apos;multipart/alternative&apos;; ... l_attachment_table(2).t_name := l_attach_file_name; l_attachment_table(2).t_ddl := cux_fnd_xls_pkg.finish; l_attachment_table(2).t_ext := &apos;xlsx&apos;; l_attachment_table(2).t_content_type := &apos;multipart/alternative&apos;; ... cux_fnd_sendmail_pkg.send_mail_attach_blob_t_c(p_from_email =&gt; &apos;erp@oracle.com&apos;, p_receiver_address =&gt; l_receiver_address, p_receive_name =&gt; l_receiver_address, p_email_subject =&gt; l_email_subject, p_email_body =&gt; l_email_body, p_cc_name =&gt; l_cc_address, p_attachment_table =&gt; l_attachment_table); END; 图文1234567cux_fnd_sendmail_pkg.send_mail_with_image(p_from_email =&gt; v_sender_email, p_receiver_address =&gt; c_per.email_address, p_receive_name =&gt; c_per.last_name, p_email_subject =&gt; v_mail_title, p_email_body =&gt; v_mail_body, p_cc_name =&gt; v_cc_email, p_attachment_table =&gt; v_attach_blob_table); markdown cux_fnd_markdown_pkg1cux_pay_tax_plan_pkg.report 汉字转拼音 cux_fnd_pinyin_pkg1SELECT cux_fnd_pinyin_pkg.gethzfullpy(&apos;程宣峰&apos;) FROM dual 读取excel的内容 cux_fnd_read_xlsx_pkg12/* 不建临时表使用excel上传文件. */cux_per_upload_email_pkg 创建excel cux_fnd_xls_pkg12// 创建excel报表 cux_hcm_abs_deduct_pkg.report 压缩文件12345678910DECLARE g_zipped_blob BLOB;BEGIN FOR rec IN csr LOOP cux_fnd_xls_pkg.add1file(g_zipped_blob, rec.file_name, rec.attachment_content); cux_fnd_xls_pkg.finish_zip(g_zipped_blob, &apos;&apos;); END LOOP;END; BPM 流程1234567891011121314// 启动流程cux_bpm_utility_pkg.create_process// 启动空流程cux_bpm_utility_pkg.create_notify// 撤回cux_bpm_utility_pkg.abort_process// 审批通过cux_bpm_utility_pkg.approve_process// 拒绝cux_bpm_utility_pkg.reject_process// 当前审批人cux_bpm_common_pkg.get_uuap_username// 当前审批节点cux_bpm_utility_pkg.get_current_task_val MQ 数据同步12345hcm_common_pkg.call_plsql_main_json(p_plsql_api =&gt; &apos;cux_hcm_bo_pkg.get_pay_lines&apos;, p_msg_json =&gt; l_msg, p_http_apex =&gt; &apos;APEX&apos;, o_errcode =&gt; o_errcode, o_errmsg =&gt; o_errmsg); 百度hi通知接口 待整理 调用波塞冬的服务12345678910bp_databus_api_pkg.start_di_flow(p_di_request_id =&gt; -1, p_di_channel_code =&gt; &apos;PN_DC_UNFIN_PERMISSION&apos;, p_di_transformation_code =&gt; &apos;APPLAT_UNFIN_PERMISSION&apos;, p_di_job_codes =&gt; &apos;UNFIN_PERMISSION_USERINFO,UNFIN_PERMISSION_DUTY,UNFIN_PERMISSION_USERDUTY&apos;, p_di_business_batch_num =&gt; &apos;p_di_business_batch_num&apos;, p_di_operator =&gt; &apos;p_di_operator&apos;, p_di_batch_num =&gt; &apos;1,1,1&apos;, p_di_batch_sizes =&gt; l_di_batch_size, o_ret_code =&gt; l_error_code, o_ret_msg =&gt; l_error_msg); FYI小熊通知主库小熊通知表: cux_ext_notifications_pub.create_fyi_msg分库小熊通知表: cux_ext_polar_fyi_pub.create_fyi_msg MD5加密1SELECT utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5(input_string =&gt; &apos;chengxuanfeng&apos;)) FROM dual; 对url进行编码和解码12345BEGIN dbms_output.put_line(utl_url.escape(&apos;http://www.baidu.com/参数/=+/&apos;,TRUE,&apos;UTF8&apos;)); dbms_output.put_line(utl_url.escape(&apos;http://www.baidu.com/参数/=+/&apos;,false,&apos;UTF8&apos;)); dbms_output.put_line( utl_url.unescape(&apos;http%3A%2F%2Fwww.baidu.com%2F%E5%8F%82%E6%95%B0%2F%3D%2B%2F&apos;,&apos;UTF8&apos;));END; 调用web请求1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859FUNCTION get_audio(p_text IN VARCHAR2) RETURN BLOB IS l_req_blob BLOB; l_res_blob BLOB; l_url VARCHAR2(32767) := get_tts_url(); l_cuid VARCHAR2(32767); l_req utl_http.req; l_res utl_http.resp;BEGIN SELECT instance || &apos;-&apos; || &apos;-&apos; || userenv(&apos;sessionid&apos;) INTO l_cuid FROM v$thread; l_url := REPLACE(l_url, &apos;#text#&apos;, p_text || chr(38)); l_url := REPLACE(l_url, &apos;#token#&apos;, get_access_token); l_url := REPLACE(l_url, &apos;#cuid#&apos;, l_cuid); log(l_url); l_req := utl_http.begin_request(l_url, &apos;GET&apos;); dbms_lob.createtemporary(lob_loc =&gt; l_req_blob, cache =&gt; FALSE); utl_http.write_raw(l_req, l_req_blob); l_res := utl_http.get_response(l_req); dbms_output.put_line(&apos;Response&gt; status_code: &quot;&apos; || l_res.status_code || &apos;&quot;&apos;); dbms_output.put_line(&apos;Response&gt; reason_phrase: &quot;&apos; || l_res.reason_phrase || &apos;&quot;&apos;); dbms_output.put_line(&apos;Response&gt; http_version: &quot;&apos; || l_res.http_version || &apos;&quot;&apos;); DECLARE l_raw_data RAW(512); --chunk_size CONSTANT INTEGER := 512; BEGIN dbms_lob.createtemporary(l_res_blob, FALSE); LOOP BEGIN utl_http.read_raw(l_res, l_raw_data); IF l_raw_data IS NOT NULL THEN dbms_lob.writeappend(l_res_blob, utl_raw.length(l_raw_data), l_raw_data); END IF; EXCEPTION WHEN utl_http.end_of_body THEN utl_http.end_response(l_res); EXIT; END; END LOOP; END; IF l_req.private_hndl IS NOT NULL THEN utl_http.end_request(l_req); END IF; IF l_res.private_hndl IS NOT NULL THEN utl_http.end_response(l_res); END IF; --dbms_lob.freetemporary(l_res_blob); RETURN l_res_blob;END; 12345678910111213141516171819--发送hi, 默认文本. PROCEDURE hi(p_message_type IN VARCHAR2 := &apos;text&apos;, p_hi_number IN VARCHAR2, p_content IN VARCHAR2) IS l_response_text VARCHAR2(2000); l_url VARCHAR2(32767) := get_hi_service(); l_payload CLOB := get_hi_payload(); BEGIN l_payload := REPLACE(l_payload, &apos;#MESSAGE_TYPE#&apos;, p_message_type); l_payload := REPLACE(l_payload, &apos;#HI_NUMBER#&apos;, p_hi_number); l_payload := REPLACE(l_payload, &apos;#CONTENT#&apos;, p_content); -- apex_web_service.g_request_headers(1).name := &apos;Content-Type&apos;; apex_web_service.g_request_headers(1).value := &apos;application/x-www-form-urlencoded&apos;; l_response_text := apex_web_service.make_rest_request(p_url =&gt; l_url, p_http_method =&gt; &apos;POST&apos;, p_body =&gt; l_payload); log(l_response_text); END;","categories":[{"name":"DB","slug":"DB","permalink":"http://oracle.xyz/categories/DB/"}],"tags":[]},{"title":"日常运维的查询 - FND","slug":"common-sql-query","date":"2017-04-21T09:41:51.000Z","updated":"2017-04-26T08:53:08.393Z","comments":true,"path":"posts/common-sql-query.html","link":"","permalink":"http://oracle.xyz/posts/common-sql-query.html","excerpt":"","text":"Alert - 查询预警邮件的日志12345SELECT extractvalue(xmltype(O.&quot;SYS_NC00040$&quot;), &apos;//SUBJECT&apos;) subject ,to_char(enq_time, &apos;YYYY/MM/DD HH24:MI:SS&apos;) end_time ,row_number() over(ORDER BY enq_time DESC) rn FROM apps.wf_notification_out o WHERE o.corrid LIKE &apos;APPS:ALR%&apos;; Concurent请求名称对应的可执行文件12345678SELECT e.execution_file_name FROM fnd_concurrent_programs p ,fnd_executables e WHERE p.executable_id = e.executable_id AND p.concurrent_program_id IN (SELECT t.concurrent_program_id FROM fnd_concurrent_programs_tl t WHERE t.user_concurrent_program_name = &apos;请求名称&apos;); 请求运行时正在执行的SQL12345SELECT s.* FROM fnd_concurrent_requests r, v$session v, v$sql s WHERE r.oracle_session_id = v.audsid AND v.sql_id = s.sql_id AND r.request_id = 543339; Apex restful12345678910// 查询select * from apex_rest_resource_modules WHERE workspace LIKE &apos;%MQ%&apos;; // apex urlselect * from apex_rest_resource_handlers WHERE workspace LIKE &apos;%MQ%&apos;; select * from apex_rest_resource_parameters WHERE workspace LIKE &apos;%MQ%&apos;; select * from apex_rest_resource_templates WHERE workspace LIKE &apos;%MQ%&apos;;// 清空apex的workspaceBEGIN apex_instance_admin.remove_workspace(&apos;MQBONUS&apos;); END;","categories":[{"name":"DB","slug":"DB","permalink":"http://oracle.xyz/categories/DB/"}],"tags":[]}]}